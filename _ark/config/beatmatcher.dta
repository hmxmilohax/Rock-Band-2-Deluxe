(controller
   #include beatmatch_controller.dta)
(midi_parsers
   #include midi_parsers.dta)
(callbacks
   (sixteenth_note
      {if_else
         $world
         {handle_type
            ($world quarterbeat)}
         {handle
            (game quarterbeat)}})
   (eighth_note
      {handle_type
         ($world halfbeat)})
   (beat
   DX_COUNTDOWN_TRACKER
   {unless {> {gamecfg get practice_speed} 0} {if {is_leader_local} {session send_msg_to_all {` (beatmatch set_music_speed {, $speedmod}) kNetReliable} kNetReliable}}}
   {unless {> {gamecfg get practice_speed} 0} {beatmatch set_music_speed $speedmod}}
      {if_else
         $world
         {handle_type
            ($world beat)}
         {handle
            (game beat)}})
   (downbeat
   {unless {> {gamecfg get practice_speed} 0} {beatmatch set_music_speed $speedmod}}
      {if_else
          {modifier_mgr is_modifier_active mod_auto_play} {beatmatch foreach_active_player $player {unless {mod $measure 4} {$player deploy_if_possible}}}
          {unless {modifier_mgr is_modifier_active mod_staticfills} {beatmatch foreach_active_player $player {switch {$player instrument} (bass) (guitar) (vocals) (drum {unless {mod $measure 4} {$player deploy_if_possible}})}}}}
      {if_else
         $world
         {handle_type
            ($world downbeat)}
         {handle
            (game downbeat)}})
   (reset
      {handle
         ($world start)}))
(watcher
   (can_switch_tracks FALSE)
   (slop
      {if_else {modifier_mgr is_modifier_active mod_precision}
         50 ;precision mode, gh3/ch style
         {if_else {modifier_mgr is_modifier_active mod_calibration}
         15 ;really strict window, great for calibrating
            {if_else {modifier_mgr is_modifier_active mod_chmode}
            750 ;whale pussy mode
               {if_else {<= $speedmod 1.0}
                  100 ;if 100% or less, use stock 100ms window (which is proportional)
                  {* 100 $speedmod} ;if speedup, compensate for song speed in the note window
               }
            }
         }
      }
   )
   (cheat_error 0)
   (autoplay_accuracy
      (100 100 100 100 #ifdef HX_EE 100 100 100 100 #endif ))
   (pitch_bend_range {if_else $whammyfx 1 0}) ;no whammy fx modifier support
   (ms_to_full_pitch_bend 1000))
(parser
   (drum_style_instruments
      (drum))
   (vocal_style_instruments
      (vocals))
   (num_slots 5)
   (phrase_slot 7)
   (player_slot 9))
(audio
   (default_style unmute)
   (mute_volume {if_else $trkmuting -96.0 -0.001}) ;-96.0 for normal muting, -0.001 for "no" muting
   (multiplayer_scale 0.33)
   (multiplayer_attenuation 3.0)
   (multiplayer_common_attenuation 1.5)
   (background_attenuation #ifdef HX_EE 1.5 #else 2.2 #endif )
   (cue_attenuation 0.0)
   (remote_attenuation 1.5)
   (drum_velocity_to_db
      (0.0 -13.0 -7.0 -3.0 -2.0 -0.5 0.0))
   (drum_sample_attenuation 3.0)
   (submixes
      (basic
         (0 1 2 3 4))
      (drums0
         ((0 1)
            (0 1)
            (0 1)
            (0 1)
            (0 1)))
      (drums0d
         ((0 1)
            (0 1)
            (0 1)
            (0 1)
            (0 1)))
      (drums1
         ((0)
            (1)
            (2 3)
            (2 3)
            (2 3)))
      (drums1easy
         ((0)
            (1 2 3)
            (1 2 3)
            (1 2 3)
            (1 2 3)))
      (drums1easynokick
         ((0)
            (1 2 3)
            (0 1 2 3)
            (0 1 2 3)
            (0 1 2 3)))
      (drums1d
         ((0)
            (2 3)
            (1)
            (2 3)
            (2 3)))
      #ifdef HX_EE
      (drums2
         ((0)
            (1)
            (2 3)
            (2 3)
            (2 3)))
      (drums2easy
         ((0)
            (1 2 3)
            (1 2 3)
            (1 2 3)
            (1 2 3)))
      (drums2easynokick
         ((0)
            (1)
            (0 2 3)
            (0 2 3)
            (0 2 3)))
      (drums2easysnareonly
         ((0)
            (0 1 2 3)
            (0 1 2 3)
            (0 1 2 3)
            (0 1 2 3)))
      (drums2d
         ((0)
            (2 3)
            (1)
            (2 3)
            (2 3)))
      (drums3
         ((0)
            (1)
            (2 3)
            (2 3)
            (2 3)))
      (drums3d
         ((0)
            (2 3)
            (1)
            (2 3)
            (2 3)))
      (drums3easy
         ((0)
            (1 2 3)
            (1 2 3)
            (1 2 3)
            (1 2 3)))
      (drums3easynokick
         ((0)
            (1 2 3)
            (0 2 3)
            (0 2 3)
            (0 2 3)))
      #else
      #ifdef HX_WII
      (drums2
         ((0)
            (1)
            (2 3)
            (2 3)
            (2 3)))
      (drums2easy
         ((0)
            (1 2 3)
            (1 2 3)
            (1 2 3)
            (1 2 3)))
      (drums2easynokick
         ((0)
            (1 2 3)
            (0 1 2 3)
            (0 1 2 3)
            (0 1 2 3)))
      (drums2easysnareonly
         ((0)
            (0 1 2 3)
            (0 2 3)
            (0 2 3)
            (0 2 3)))
      (drums2d
         ((0)
            (2 3)
            (1)
            (2 3)
            (2 3)))
      (drums3
         ((0)
            (1)
            (2 3)
            (2 3)
            (2 3)))
      (drums3d
         ((0)
            (2 3)
            (1)
            (2 3)
            (2 3)))
      (drums3easy
         ((0)
            (1 2 3)
            (1 2 3)
            (1 2 3)
            (1 2 3)))
      (drums3easynokick
         ((0)
            (1 2 3)
            (0 1 2 3)
            (0 1 2 3)
            (0 1 2 3)))
      #else
      (drums2
         ((0)
            (1 2)
            (3 4)
            (3 4)
            (3 4)))
      (drums2easy
         ((0)
            (1 2 3 4)
            (1 2 3 4)
            (1 2 3 4)
            (1 2 3 4)))
      (drums2easynokick
         ((0)
            (1 2)
            (0 3 4)
            (0 3 4)
            (0 3 4)))
      (drums2easysnareonly
         ((0)
            (0 1 2 3 4)
            (0 3 4)
            (0 3 4)
            (0 3 4)))
      (drums2d
         ((0)
            (3 4)
            (1 2)
            (3 4)
            (3 4)))
      (drums3
         ((0 1)
            (2 3)
            (4 5)
            (4 5)
            (4 5)))
      (drums3d
         ((0 1)
            (4 5)
            (2 3)
            (4 5)
            (4 5)))
      (drums3easy
         ((0 1)
            (2 3 4 5)
            (2 3 4 5)
            (2 3 4 5)
            (2 3 4 5)))
      (drums3easynokick
         ((0 1)
            (2 3)
            (0 1 4 5)
            (0 1 4 5)
            (0 1 4 5)))
      #endif
      #endif
      (drums4
         ((0)
            (1 2)
            (1 2)
            (1 2)
            (1 2)))
      (drums4d
         ((0)
            (1 2)
            (1 2)
            (1 2)
            (1 2)))
      (drums4easynokick
         ((0)
            (0 1 2)
            (0 1 2)
            (0 1 2)
            (0 1 2)))))
#merge ../../../system/run/config/beatmatch.dta