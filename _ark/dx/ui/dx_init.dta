#include ../../ui/overshell.dta ; having overshell.dta in ./dx crashes the game for some reason
#include ../track/dx_track_callback.dta
#include dx_funcs.dta
#ifndef HX_EE
#include ../countdown/dx_countdown_ui_init.dta
#endif

{set $dx_connected_server none}

;sets default track speed. 1.15 is 115%, 1.30 is 130% and so on.
{set $trackspeed 1.0}

;sets default track length. 1.15 is 115%, 1.30 is 130% and so on.
{set $tracklength 1.0}

;sets default song speed 1.15 is 115%, 1.30 is 130% and so on.
{set $speedmod 1.0}
{set $leaderspeed $speedmod}

;set default venue fps.
{set $emulatefps 24}

;set FC indicator type
{set $fctype glow}

{set $slot1_color 0} ;0 = green, preset colors to GRYBO
{set $slot2_color 1} ;1 = red
{set $slot3_color 2} ;2 = yellow
{set $slot4_color 3} ;3 = blue
{set $slot5_color 4} ;4 = orange

;gem texture
{set $gem "rb2dx"}

;strikeline texture
#ifdef HX_WII ; wii transparency is broken atm, so the rb2dx smashers don't exist
{set $smasher "rb2"} ; set it to rb2 "HD" texture instead
#else
{set $smasher "rb2dx"}
#endif

;lanes texture
{set $lanestex "rb2"}

;no gem dividers
{set $nogemdividers FALSE}

;highway texture (guitar)
{set $highwaygtr "_1_none"}

;highway texture (bass)
{set $highwaybass "_1_none"}

;highway texture (drums)
{set $highwaydrum "_1_none"}

;streak texture (guitar)
{set $streakgtr "rb4"}

;streak texture (bass)
{set $streakbass "rb4"}

;streak texture (drums)
{set $streakdrum "rb4"}

;overdrive texture (guitar)
{set $spotlightgtr "rb4"}

;overdrive texture (bass)
{set $spotlightbass "rb4"}

;overdrive texture (drums)
{set $spotlightdrum "rb4"}

;multiplier ring texture
{set $multiring "rb2dx"}

;overdrive bar texture
{set $odbar "rb2dx"}

;rails texture
{set $rails "rb2"}

;flames texture
{set $flames "rb2dx"}

;crowd meter texture
{set $crowdmetertex "rb2"}

;score texture
{set $scoretex "rb4"}

;solo box texture
{set $solobox "rb2"}

;stars texture
{set $stars "rb4"}

;score font texture
{set $font "rb2"}

;bre texture
{set $bretex "rb2"}

;vocal arrow texture
{set $voxarrow "rb2dx"}

;vocal notes texture
{set $voxnotes "rb2dx"}

;vocal overdrive texture
{set $voxod "none"}

;vocal highway texture
{set $voxhw "none"}

;custom track scaling/angles/rotation
;highly experimental, don't edit unless you know what you're doing
{set $trackangle FALSE}

;track angle presets that closely match the source games
;available options: "rb2", "rb3", "rb4", "rr" "none"
{set $anglepreset "rb2"}
;set to "none" if you want to manually edit the numbers below

;the default angles set here is rb3's
{set $track_pitch -41} ;camera pitch in degrees
{set $track_fov 19} ;field of view of the track camera
{set $track_y_pos -100} ;y position of the camera (+in/-out)
{set $track_z_pos 22} ;z position of the camera (-up/+down)
{set $track_fade_start 70} ;start point of the fadeout at the end of the track
{set $track_fade_length 50} ;length of the fadeout at the end of the track

;sustain style
{set $sustains "rb2"}

;highway transparency (rb2, rb1, off)
{set $hwalpha rb2}

#ifndef HX_EE
;legacy bass groove
{set $legacybass FALSE}

;streak on highway instead of overlay
{set $hwstreak FALSE}

;no highway warning
{set $nohwwarn FALSE}

;rail warning
{set $railwarn FALSE}
#endif

;whammy fx
{set $whammyfx TRUE}

;crowd sfx
{set $crowdsfx TRUE}

;track muting
{set $trkmuting TRUE}

;{modifier_mgr activate_modifier mod_nofail}
;{modifier_mgr activate_modifier mod_doublespeed}
;{modifier_mgr activate_modifier mod_choose_venue}
;{modifier_mgr activate_modifier mod_nohud}
;{modifier_mgr activate_modifier mod_unlockall}
;{modifier_mgr activate_modifier mod_newvenuesonly}
;{modifier_mgr activate_modifier mod_demomode}
;{modifier_mgr activate_modifier mod_awesome}
;{modifier_mgr activate_modifier mod_selectdeploy}
;{modifier_mgr activate_modifier mod_auto_play}

#ifndef HX_EE ; cant read dx.dta on ps2 (yet)
#ifndef HX_WII ; also wii
#define INIT_DTA_READER
(
   {set $dxsettings {read_file #ifdef HX_XBOX "GAME:/dx.dta" #endif #ifdef HX_PS3 "GD:/dev_hdd0/game/BLUS30147/USRDIR/dx.dta" #endif}}
   {foreach $entry $dxsettings
      {if {== {elem $entry 0} {basename gem_colors}}
         {set $slot1_color
            {elem {find $entry gem_colors} 1}
         }
         {set $slot2_color
            {elem {find $entry gem_colors} 2}
         }
         {set $slot3_color
            {elem {find $entry gem_colors} 3}
         }
         {set $slot4_color
            {elem {find $entry gem_colors} 4}
         }
         {set $slot5_color
            {elem {find $entry gem_colors} 5}
         }
      }
      {if {== {elem $entry 0} {basename no_save_mode}}
         {set $nosavemode
            {elem {find $entry no_save_mode} 1}
         }
      }
      {if {== {elem $entry 0} {basename track_speed}}
         {set $trackspeed
            {elem {find $entry track_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename song_speed}}
         {set $speedmod
            {elem {find $entry song_speed} 1}
         }
      }
      {if {== {elem $entry 0} {basename emulate_fps}}
         {set $emulatefps
            {elem {find $entry emulate_fps} 1}
         }
      }
      {if {== {elem $entry 0} {basename gem_texture}}
         {set $gem
            {elem {find $entry gem_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename smasher_texture}}
         {set $smasher
            {elem {find $entry smasher_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename streak_texture}}
         {set $streak
            {elem {find $entry streak_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_guitar_texture}}
         {set $spotlightgtr
            {elem {find $entry spotlight_guitar_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_bass_texture}}
         {set $spotlightbass
            {elem {find $entry spotlight_bass_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename spotlight_drums_texture}}
         {set $spotlightdrum
            {elem {find $entry spotlight_drums_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename multiring_texture}}
         {set $multiring
            {elem {find $entry multiring_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename odbar_texture}}
         {set $odbar
            {elem {find $entry odbar_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename rails_texture}}
         {set $rails
            {elem {find $entry rails_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename flames_texture}}
         {set $flames
            {elem {find $entry flames_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename score_texture}}
         {set $scoretex
            {elem {find $entry score_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxarrow_texture}}
         {set $voxarrow
            {elem {find $entry voxarrow_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxnotes_texture}}
         {set $voxnotes
            {elem {find $entry voxnotes_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxod_texture}}
         {set $voxod
            {elem {find $entry voxod_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename voxhw_texture}}
         {set $voxhw
            {elem {find $entry voxhw_texture} 1}
         }
      }
      {if {== {elem $entry 0} {basename angle_preset}}
         {set $anglepreset
            {elem {find $entry angle_preset} 1}
         }
      }
      {if {== {elem $entry 0} {basename mod_nofail}}
         {if {== {elem {find $entry mod_nofail} 1} 1}
            {modifier_mgr activate_modifier mod_nofail}
         }
      }
      {if {== {elem $entry 0} {basename mod_doublespeed}}
         {if {== {elem {find $entry mod_doublespeed} 1} 1}
            {modifier_mgr activate_modifier mod_doublespeed}
         }
      }
      {if {== {elem $entry 0} {basename mod_nohud}}
         {if {== {elem {find $entry mod_nohud} 1} 1}
            {modifier_mgr activate_modifier mod_nohud}
         }
      }
      {if {== {elem $entry 0} {basename mod_newvenuesonly}}
         {if {== {elem {find $entry mod_newvenuesonly} 1} 1}
            {modifier_mgr activate_modifier mod_newvenuesonly}
         }
      }
      {if {== {elem $entry 0} {basename mod_awesome}}
         {if {== {elem {find $entry mod_awesome} 1} 1}
            {modifier_mgr activate_modifier mod_awesome}
         }
      }
      {if {== {elem $entry 0} {basename mod_blackvenue}}
         {if {== {elem {find $entry mod_blackvenue} 1} 1}
            {modifier_mgr activate_modifier mod_blackvenue}
         }
      }
      {if {== {elem $entry 0} {basename mod_songtitle}}
         {if {== {elem {find $entry mod_songtitle} 1} 1}
            {modifier_mgr activate_modifier mod_songtitle}
         }
      }
      {if {== {elem $entry 0} {basename mod_songtitlestats}}
         {if {== {elem {find $entry mod_songtitlestats} 1} 1}
            {modifier_mgr activate_modifier mod_songtitlestats}
         }
      }
      {if {== {elem $entry 0} {basename mod_staticfills}}
         {if {== {elem {find $entry mod_staticfills} 1} 1}
            {modifier_mgr activate_modifier mod_staticfills}
         }
      }
      {if {== {elem $entry 0} {basename mod_mididrum}}
         {if {== {elem {find $entry mod_mididrum} 1} 1}
            {modifier_mgr activate_modifier mod_mididrum}
         }
      }
      {if {== {elem $entry 0} {basename mod_padguitar}}
         {if {== {elem {find $entry mod_padguitar} 1} 1}
            {modifier_mgr activate_modifier mod_padguitar}
         }
      }
      {if {== {elem $entry 0} {basename mod_paddrum}}
         {if {== {elem {find $entry mod_paddrum} 1} 1}
            {modifier_mgr activate_modifier mod_paddrum}
         }
      }
      ; {if {== {elem $entry 0} {basename mod_selectdeploy}}
      ;    {if {== {elem {find $entry mod_selectdeploy} 1} 1}
      ;       {modifier_mgr activate_modifier mod_selectdeploy}
      ;    }
      ; }
      {if {== {elem $entry 0} {basename mod_noquickrestart}}
         {if {== {elem {find $entry mod_noquickrestart} 1} 1}
            {modifier_mgr activate_modifier mod_noquickrestart}
         }
      }
      {if {== {elem $entry 0} {basename mod_vocalgender}}
         {if {== {elem {find $entry mod_vocalgender} 1} 1}
            {modifier_mgr activate_modifier mod_vocalgender}
         }
      }
      {if {== {elem $entry 0} {basename mod_legacybass}}
         {if {== {elem {find $entry mod_legacybass} 1} 1}
            {set $legacybass TRUE}
         }
      }
      {if {== {elem $entry 0} {basename mod_nosustain}}
         {if {== {elem {find $entry mod_nosustain} 1} 1}
            {set $sustains "_1_none"}
         }
      }
      {if {== {elem $entry 0} {basename mod_rb3sustain}}
         {if {== {elem {find $entry mod_rb3sustain} 1} 1}
            {set $sustains "rb3"}
         }
      }
      {if {== {elem $entry 0} {basename mod_nowhammyfx}}
         {if {== {elem {find $entry mod_nowhammyfx} 1} 1}
            {set $whammyfx FALSE}
         }
      }
      {if {== {elem $entry 0} {basename mod_gemdivider}}
         {if {== {elem {find $entry mod_gemdivider} 1} 1}
            {set $gemdividers TRUE}
         }
      }
      {if {== {elem $entry 0} {basename mod_nocrowd}}
         {if {== {elem {find $entry mod_nocrowd} 1} 1}
            {set $crowdsfx FALSE}
         }
      }
      {if {== {elem $entry 0} {basename mod_nomuting}}
         {if {== {elem {find $entry mod_nomuting} 1} 1}
            {set $trkmuting FALSE}
         }
      }
      {if {== {elem $entry 0} {basename mod_noflames}}
         {if {== {elem {find $entry mod_noflames} 1} 1}
            {modifier_mgr activate_modifier mod_noflames}
         }
      }
      {if {== {elem $entry 0} {basename mod_flashbang}}
         {if {== {elem {find $entry mod_flashbang} 1} 1}
            {modifier_mgr activate_modifier mod_flashbang}
         }
      }
      #ifdef HX_PS3
      {if {== {elem $entry 0} {basename mod_novsync}}
         {if {== {elem {find $entry mod_novsync} 1} 1}
            {modifier_mgr activate_modifier mod_novsync}
            {rnd set_sync 0}
         }
      }
      #endif
      {if {== {elem $entry 0} {basename debug_mode}}
         {set $debug_mode
            {elem {find $entry debug_mode} 1}
         }
      }
      {if {== {elem $entry 0} {basename load_custom_settings}}
         {set $loadcustomsettings
            {elem {find $entry load_custom_settings} 1}
         }
      }
   }
   {set $dxsettings 0}
)
;{unless {file_exists dx.dta} INIT_DTA_WRITER}
INIT_DTA_READER
#endif
#endif
DX_TEXTURE_CORRECTOR
DX_DO_CUSTOM_TEXTURE_HANDLER

#include init_dev.dta